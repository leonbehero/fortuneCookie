Private GameTimer As clsTimer
Dim Citizen As clsCitizen
Dim City As clsCity
'Private GameSheet As clsGameSheet

Public Sub InitialiseGame()

'Application.ScreenUpdating = False

    Set City = New clsCity
    Set Citizen = New clsCitizen
    DayCount = 0
    
    SetGameKeys
    
    Set GameTimer = New clsTimer
    
    GameTimer.StartTimer

End Sub

Public Sub TerminateGame()

    'Called once when game ends
    
    'Used to tidy up
    
    Set GameTimer = Nothing
    
    Set Citizen = Nothing
    
    'shMenu.Activate
    
    'Set GameSheet = Nothing
    
    ResetKeys

End Sub
Public Sub updateanddraw()
        Citizen.Update
        Citizen.DrawPerson
        shCity.Shapes("InfectionNumber").TextFrame2.TextRange.Characters.Text = DayCount
End Sub
Public Sub UpdateAndDrawGame()

    'Called by the SetTimer function
    
    'Runs once for each tick of the timer clock
    
    'Updates all game logic
    
    'Draws all game objects
    'Debug.Print GetAsyncKeyState(vbKeyTab)
    TimerCount = TimerCount + 1
    
    If GetAsyncKeyState(vbKeyTab) <> 0 Then
    
        TerminateGame
        
        Exit Sub
    
    End If
    Debug.Print TimerCount
    If TimerCount Mod 5 = 0 Then
        DayCount = DayCount + 1
        Citizen.Update
        Citizen.DrawPerson
        shCity.Shapes("InfectionNumber").TextFrame2.TextRange.Characters.Text = DayCount
    End If
    
    If TimerCount Mod 24 = 0 Then
        DayCount = DayCount + 1
    End If
    
    'If TimerCount Mod 10 = 0 Then
    '    shCity.Shapes(1).TextFrame2.TextRange.Characters.Text = DayCount
    'End If
    'If TimerCount Mod 20 = 0 Then
    '    DayCount = DayCount + 1
    '    shCity.Shapes(1).TextFrame2.TextRange.Characters.Text = DayCount
    'End If

End Sub
Sub getcolor()
    
    Debug.Print Range("a1").Interior.ColorIndex
    
End Sub
Sub testtextframe()
'shCity.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Infection Number:"
Debug.Print shCity.Shapes(1).Name

shCity.Shapes(1).TextFrame2.TextRange.Characters.Text = "Infection Number:"

End Sub
Private Sub SetGameKeys()

    Application.OnKey "{ESC}", ""
    
    Application.OnKey "{UP}", "upkey"
    
    Application.OnKey "{DOWN}", "downkey"
    
    Application.OnKey "{LEFT}", "leftkey"
    
    Application.OnKey "{RIGHT}", "rightkey"
    
    Application.OnKey "{TAB}", ""

End Sub

Private Sub ResetKeys()

    Application.OnKey "{UP}"
    
    Application.OnKey "{DOWN}"
    
    Application.OnKey "{TAB}"
    
    Application.OnKey "{ESC}"
    
    Application.OnKey "{LEFT}"
    
    Application.OnKey "{RIGHT}"

End Sub

Sub testingloop()
Dim x As Integer

    Do
        x = x + 1
        Debug.Print x
        
    Loop While x < 3
End Sub


Public Sub Pause(sngSecs As Single)
    Dim sngEnd As Single
    sngEnd = Timer + sngSecs
    While Timer < sngEnd
        DoEvents
    Wend
End Sub
Sub WasteTime(Finish As Long)
 
    Dim NowTick As Long
    Dim EndTick As Long
 
    EndTick = GetTickCount + (Finish)
     
    Do
 
        NowTick = GetTickCount
        DoEvents
 
    Loop Until NowTick >= EndTick
 
End Sub

Private Sub DelayMs(ms As Long)
    Debug.Print TimeValue(Now)
    Application.Wait (Now + (ms * 0.00000001))
    Debug.Print TimeValue(Now)
End Sub

Public Sub TestPause()
    Call DelayMs(500)
    MsgBox "done"
End Sub

Sub StartTimer()
    
    TimerActive = True
    'Debug.Print TimerActive
    
End Sub

Private Sub Start_Timer()
    TimerActive = True
    Debug.Print "yes", timeactive
    Application.OnTime Now() + TimeValue("00:00:01"), "moveSnake"
End Sub

Private Sub Stop_Timer()
    TimerActive = False
    Debug.Print TimerActive
End Sub

Private Sub Timers()
    If TimerActive Then
        ActiveSheet.Cells(1, 1).Value = Time
        Application.OnTime Now() + TimeValue("00:00:01"), "Timer"
    End If
End Sub

Private Sub Snake()
    If TimerActive Then
        ActiveSheet.Cells(2, 2).Color = vbBlack
        Application.OnTime Now() + TimeValue("00:00:01"), "drawSnake"
    End If
End Sub

'Private Sub drawSnake()
'    If TimerActive Then
'        ActiveSheet.Cells(2, 2).Color = vbBlack
'        Application.OnTime Now() + TimeValue("00:00:01"), "drawSnake"
'    End If
'End Sub





Sub drawSnake()


End Sub
Sub rightkey()
    If DirectionX = -1 And DirectionY = 0 Then
        DirectionX = 0
        DirectionY = 1
    ElseIf DirectionX = 0 And DirectionY = 1 Then
        DirectionX = 0
        DirectionY = 1
    ElseIf DirectionX = 1 And DirectionY = 0 Then
        DirectionX = 0
        DirectionY = 1
    ElseIf DirectionX = 0 And DirectionY = -1 Then
        DirectionX = 0
        DirectionY = -1
    End If
End Sub
Sub leftkey()
    If DirectionX = -1 And DirectionY = 0 Then
        DirectionX = 0
        DirectionY = -1
    ElseIf DirectionX = 0 And DirectionY = 1 Then
        DirectionX = 0
        DirectionY = 1
    ElseIf DirectionX = 1 And DirectionY = 0 Then
        DirectionX = 0
        DirectionY = -1
    ElseIf DirectionX = 0 And DirectionY = -1 Then
        DirectionX = 0
        DirectionY = -1
    End If
End Sub
Sub upkey()
    If DirectionX = -1 And DirectionY = 0 Then
        DirectionX = -1
        DirectionY = 0
    ElseIf DirectionX = 0 And DirectionY = 1 Then
        DirectionX = -1
        DirectionY = 0
    ElseIf DirectionX = 1 And DirectionY = 0 Then
        DirectionX = 1
        DirectionY = 0
    ElseIf DirectionX = 0 And DirectionY = -1 Then
        DirectionX = -1
        DirectionY = 0
    End If
End Sub
Sub downkey()
    If DirectionX = -1 And DirectionY = 0 Then
        DirectionX = -1
        DirectionY = 0
    ElseIf DirectionX = 0 And DirectionY = 1 Then
        DirectionX = 1
        DirectionY = 0
    ElseIf DirectionX = 1 And DirectionY = 0 Then
        DirectionX = 1
        DirectionY = 0
    ElseIf DirectionX = 0 And DirectionY = -1 Then
        DirectionX = 1
        DirectionY = 0
    End If
End Sub

Sub ResetGame()
    ActiveSheet.Range("PlayGround").ClearFormats
End Sub

Sub testrandom()
    Dim x As Double
    x = RandNorm(0, 1)
    Debug.Print x
    
End Sub


